name: pypi-test

on:
  pull_request:
    branches:
      - develop

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write  # Grant write permissions to the contents of the repository
    env:
      POETRY_VIRTUALENVS_CREATE: "false"
    steps:
      - uses: actions/checkout@v4

      - name: Fetch latest release version
        id: fetch-latest-release
        uses: reloc8/action-latest-release-version@1.0.0

      - name: Install poetry
        run: |
          pipx install poetry
          pipx inject poetry .

      - name: Increment patch version and set version with development release segment
        run: |
          pip install -e '.[cli]'

          # Increment patch version and set version with development release segment
          VERSION=$(poetry version -s)
          RELEASE_VERSION="${{ steps.fetch-latest-release.outputs.latest-release }}"
          PR_NUMBER="${{ github.event.number }}"
          BRANCH_NAME="${{ github.ref_name }}"
          NEW_VERSION=$(sqldbm build version-bump --branch ${BRANCH_NAME} --build ${GITHUB_RUN_NUMBER} --pr ${PR_NUMBER} --current-version ${VERSION} --latest-release ${RELEASE_VERSION})

          poetry version $NEW_VERSION

          # Export the new version for use in subsequent steps
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

      - name: Build
        run: |
          poetry build

      - name: Publish package distributions to Test PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository_url: https://test.pypi.org/legacy/
