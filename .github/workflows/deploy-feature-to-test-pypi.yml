name: pypi-test / feature

on:
  pull_request:
    branches:
      - develop

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write  # Grant write permissions to the contents of the repository
    env:
      POETRY_VIRTUALENVS_CREATE: "false"
    steps:
      - uses: actions/checkout@v4

      - name: Fetch latest release version
        id: fetch-latest-release
        uses: reloc8/action-latest-release-version@1.0.0

      - name: Install poetry
        run: |
          pipx install poetry
          pipx inject poetry .

      - name: Increment patch version and set version with development release segment
        run: |
          pip install '.[cli]'

          # Increment patch version and set version with development release segment
          CURRENT_VERSION=$(poetry version -s)
          NEW_VERSION=$(sqldbm \
            build \
            version-bump \
            feature \
              --build "${GITHUB_RUN_NUMBER}" \
              --pr "${{ github.event.number }}" \
              --current-version "${CURRENT_VERSION}" \
              --latest-release "${{ steps.fetch-latest-release.outputs.latest-release }}")

          poetry version $NEW_VERSION

          # Export the new version for use in subsequent steps
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

      - name: Build
        run: |
          poetry build

      - name: Publish package distributions to Test PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
