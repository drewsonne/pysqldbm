name: pypi-test

on:
  pull_request:
    branches:
      - develop

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write  # Grant write permissions to the contents of the repository
    env:
      POETRY_VIRTUALENVS_CREATE: "false"
    steps:
      - uses: actions/checkout@v4

      - name: Install poetry
        run: |
          pipx install poetry
          pipx inject poetry .

      - name: Increment patch version and set version with development release segment
        run: |
          VERSION=$(poetry version -s)
          MAJOR=$(echo $VERSION | cut -d. -f1)
          MINOR=$(echo $VERSION | cut -d. -f2)
          PATCH=$(echo $VERSION | cut -d. -f3)
          NEW_PATCH=$((PATCH + 1))
          BUILD_NUMBER=${GITHUB_RUN_NUMBER}
          NEW_VERSION="${MAJOR}.${MINOR}.${NEW_PATCH}.dev${BUILD_NUMBER}"
          poetry version $NEW_VERSION

      - name: Build
        run: |
          poetry build

      - name: Publish package distributions to Test PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository_url: https://test.pypi.org/legacy/

      - name: Commit version change
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git pull --rebase origin HEAD:${{ github.head_ref }}
          git add pyproject.toml
          git commit -m "Set beta version to $BETA_VERSION"
          git push origin HEAD:${{ github.head_ref }}
