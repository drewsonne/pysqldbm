name: commit-version-bump

on:
  push:
    branches:
      - develop

jobs:
  commit-version:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Grant write permissions to the contents of the repository
    env:
      POETRY_VIRTUALENVS_CREATE: "false"
    steps:
      - uses: actions/checkout@v4

      - name: Install poetry
        run: |
          pipx install poetry
          pipx inject poetry .

      - name: Fetch latest release version
        id: fetch-latest-release
        uses: reloc8/action-latest-release-version@1.0.0

      - name: Increment patch version and set version with development release segment
        run: |
          set -x
          RELEASE_VERSION="${{ steps.fetch-latest-release.outputs.latest-release }}"
          RELEASE_MAJOR=$(echo $RELEASE_VERSION | cut -d. -f1)
          RELEASE_MINOR=$(echo $RELEASE_VERSION | cut -d. -f2)
          RELEASE_PATCH=$(echo $RELEASE_VERSION | cut -d. -f3)

          DEVELOP_VERSION=$(poetry version -s)
          DEVELOP_MAJOR=$(echo $VERSION | tr "b" "." | cut -d. -f1)
          DEVELOP_MINOR=$(echo $VERSION | tr "b" "." | cut -d. -f2)
          DEVELOP_PATCH=$(echo $VERSION | tr "b" "." | cut -d. -f3)
          DEVELOP_BETA=$(echo $VERSION | tr "b" "." | cut -d. -f4)

          if [ $DEVELOP_MAJOR -gt $RELEASE_MAJOR ]; then
            NEW_MAJOR=$DEVELOP_MAJOR
            NEW_MINOR=0
            NEW_PATCH=0
          elif [ $DEVELOP_MINOR -gt $RELEASE_MINOR ]; then
            NEW_MAJOR=$DEVELOP_MAJOR
            NEW_MINOR=$DEVELOP_MINOR
            NEW_PATCH=0
          else
            NEW_MAJOR=$RELEASE_MAJOR
            NEW_MINOR=$RELEASE_MINOR
            NEW_PATCH=$((RELEASE_PATCH + 1))
          fi

          if [ -z "${BETA}" ]; then
            NEW_BETA=1
          else
            NEW_BETA=$((BETA + 1))
          fi
          NEW_VERSION="${MAJOR}.${MINOR}.${NEW_PATCH}b${NEW_BETA}"

          poetry version $NEW_VERSION

          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add pyproject.toml
          git commit -m "Set version to $NEW_VERSION"
          git push origin develop
