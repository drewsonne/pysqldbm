name: Deploy to PyPI

on:
  release:
    types: [created]
  push:
    branches-ignore:
      - main
  pull_request:
    branches:
      - develop

jobs:
  deploy:
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    env:
      POETRY_VIRTUALENVS_CREATE: "false"
    steps:
      - uses: actions/checkout@v4

      - name: Install poetry
        run: |
          pipx install poetry
          pipx inject poetry .

      - name: Build
        run: |
          poetry version ${{ github.ref_name }}
          poetry build

      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

  deploy-test:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    env:
      POETRY_VIRTUALENVS_CREATE: "false"
    steps:
      - uses: actions/checkout@v4

      - name: Install poetry
        run: |
          pipx install poetry
          pipx inject poetry .

      - name: Build
        run: |
          poetry build

      - name: Publish package distributions to Test PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository_url: https://test.pypi.org/legacy/
